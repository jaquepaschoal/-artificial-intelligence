/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body,html{height:100%}body{background-color:#618abc}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */.industrial,.industrial-content{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.industrial-content{position:relative;margin-top:-20rem;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;background-color:#3f444a;width:70rem;box-shadow:1px 2px 15px 1px rgba(0,0,0,.41)}.industrial-content-title{font-size:2rem;margin-top:6rem}.industrial-content-text{color:#fff;font-size:1.5rem;width:70%;text-align:center;margin-bottom:0}.industrial-content-img img{width:100%;height:100%}.top{padding:0;background-image:url(../img/bg-top.png);background-repeat:no-repeat;background-size:cover;background-position:bottom;height:60rem;position:relative}.top-titles{font-size:2.5rem;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;position:absolute;top:20%;margin-left:5rem}.top-titles-first{width:30rem}.top-titles-first,.top-titles-second{box-shadow:1px 2px 15px 1px rgba(0,0,0,.41)}.top-titles-second{margin-left:9rem}.advances-content{background-image:url(../img/bg-advances.png);background-repeat:no-repeat;background-size:cover;background-position:bottom;display:-ms-flexbox;display:flex;padding-top:15rem;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-align:center;align-items:center}.advances-content-img img{height:auto;width:100%}.advances-content-img{margin-bottom:9rem}.advances-content-text{width:25%}.advances-content-text h2{text-align:left;font-size:2rem}.advances-content-text p{font-size:1.5rem;color:#fff;line-height:2rem}.safe,.safe-content{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.safe-content{position:relative;margin-bottom:-6rem;padding:0 5rem;margin-top:10rem;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;background-color:#3f444a;width:70rem;box-shadow:1px 2px 15px 1px rgba(0,0,0,.41)}.safe-content-items{display:-ms-flexbox;display:flex;margin-top:4rem}.safe-content-title{font-size:2rem;margin-top:6rem;background-color:#000}.safe-content-items-text{width:30%}.safe-content-items-text p{font-size:1.5rem;color:#fff;margin-bottom:3rem;line-height:2rem}.safe-content-items-img{margin-top:-5rem;width:70%;display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:center;align-items:center}.safe-content-items-img img{height:auto;width:80%}.problems{padding-top:10rem;background-image:url(../img/bg-problems.png);background-repeat:no-repeat;background-size:cover;background-position:100%}.problems-content{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around}.problems-title{width:100%;margin-bottom:5rem;margin-top:7rem;display:-ms-flexbox;display:flex}.problems-content-item{margin-bottom:6rem;border-bottom:8px solid #618abc;box-shadow:1px 2px 15px 1px rgba(0,0,0,.41);padding:2rem;width:20%;background-color:#fff;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}.problems-content-item h3{margin-top:3rem;font-size:1.5rem;color:#3f444a;font-weight:700}.problems-content-item p{color:#3f444a;text-align:center;font-size:1.3rem}.problems-title h2{font-size:2rem;margin-left:5rem}.suggestion{padding-top:6rem;padding-bottom:6rem;background-image:url(../img/bg-form.png);background-repeat:no-repeat;background-size:cover;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column}.suggestion-title{margin:0;font-size:2rem;width:40rem}.suggestion-text{font-size:1.5rem;color:#fff;text-align:center;margin-bottom:4rem}.suggestion-form{width:60%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.suggestion-form-button{width:100%;-ms-flex-pack:end;justify-content:flex-end}.login,.suggestion-form-button{display:-ms-flexbox;display:flex}.login{-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.login-content{box-shadow:1px 2px 15px 1px rgba(0,0,0,.41);background-color:#3f444a;display:-ms-flexbox;display:flex;width:30rem;height:40rem;padding:2rem}.login-content-form{-ms-flex-direction:column;flex-direction:column}.login-content-form,.login-content-form-button{display:-ms-flexbox;display:flex;width:100%;-ms-flex-pack:end;justify-content:flex-end}.login-content-form-button{margin:1rem 0}.messages{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}.messages-title{width:30rem;margin:4rem;box-shadow:1px 1px 15px 1px rgba(0,0,0,.41)}.messages-title h2{margin:0}.dataTable-wrapper,.table{width:90%;background-color:#fff}.dataTable-wrapper{box-shadow:1px 2px 15px 1px rgba(0,0,0,.41)}.button{border:1px solid #fff;outline:none;width:15rem;height:4rem;cursor:pointer;color:#fff;background-color:transparent;font-size:1.5rem;transition:.3s ease-out}.button:hover{background-color:#fff;color:#3f444a;border:none}.input,.textarea{border-radius:1px;margin-bottom:1rem;background-color:transparent;border:1px solid #fff;color:#fff;padding:1rem;font-size:1.5rem}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}

/*!
 *
 * Vanilla-DataTables
 * Copyright (c) 2015-2017 Karl Saunders (http://mobius.ovh)
 * Licensed under MIT (http://www.opensource.org/licenses/mit-license.php)
 *
 * Version: 1.6.11
 *
 */.dataTable-wrapper.no-header .dataTable-container{border-top:1px solid #d9d9d9}.dataTable-wrapper.no-footer .dataTable-container{border-bottom:1px solid #d9d9d9}.dataTable-bottom,.dataTable-top{padding:8px 10px}.dataTable-bottom>div:first-child,.dataTable-top>div:first-child{float:left}.dataTable-bottom>div:last-child,.dataTable-top>div:last-child{float:right}.dataTable-selector{padding:6px}.dataTable-input{padding:6px 12px}.dataTable-info{margin:7px 0}.dataTable-pagination ul{margin:0;padding-left:0}.dataTable-pagination li{list-style:none;float:left}.dataTable-pagination a{border:1px solid transparent;float:left;margin-left:2px;padding:6px 12px;position:relative;text-decoration:none;color:#333}.dataTable-pagination a:hover{background-color:#d9d9d9}.dataTable-pagination .active a,.dataTable-pagination .active a:focus,.dataTable-pagination .active a:hover{background-color:#d9d9d9;cursor:default}.dataTable-pagination .disabled a,.dataTable-pagination .disabled a:focus,.dataTable-pagination .disabled a:hover,.dataTable-pagination .ellipsis a{cursor:not-allowed}.dataTable-pagination .disabled a,.dataTable-pagination .disabled a:focus,.dataTable-pagination .disabled a:hover{cursor:not-allowed;opacity:.4}.dataTable-pagination .pager a{font-weight:700}.dataTable-table{max-width:100%;width:100%;border-spacing:0}.dataTable-table>tbody>tr>td,.dataTable-table>tbody>tr>th,.dataTable-table>tfoot>tr>td,.dataTable-table>tfoot>tr>th,.dataTable-table>thead>tr>td,.dataTable-table>thead>tr>th{vertical-align:top;padding:8px 10px}.dataTable-table>tfoot>tr>th,.dataTable-table>thead>tr>th,.dataTable-table th{vertical-align:bottom;text-align:left}.dataTable-table>thead>tr>th{border-bottom:1px solid #d9d9d9}.dataTable-table>tfoot>tr>th{border-top:1px solid #d9d9d9}.dataTable-table th a{text-decoration:none;color:inherit}.dataTable-sorter{display:inline-block;height:100%;position:relative;width:100%}.dataTable-sorter:after,.dataTable-sorter:before{content:"";height:0;width:0;position:absolute;right:4px;border-left:4px solid transparent;border-right:4px solid transparent;opacity:.2}.dataTable-sorter:before{border-top:4px solid #000;bottom:10px}.dataTable-sorter:after{border-bottom:4px solid #000;border-top:4px solid transparent;top:0}.asc .dataTable-sorter:after,.desc .dataTable-sorter:before{opacity:.6}.dataTables-empty{text-align:center}.dataTable-bottom:after,.dataTable-top:after{clear:both;content:" ";display:table}.title{padding:1rem;text-align:center;font-weight:700}.title.white{color:#3f444a;background-color:#fff}.title.dark{color:#fff;background-color:#3f444a}@media screen and (min-width:1320px){.centralizer{max-width:1300px;max-width:130rem;margin:0 auto}}@media screen and (min-width:1024px) and (max-width:1319px){.centralizer{width:98%;max-width:1280px;max-width:128rem;margin:0 auto}.problems-content-item{width:25%}}@media only screen and (min-width:641px) and (max-width:860px){.centralizer{width:98%;margin:0 auto}.top-titles{font-size:2rem;top:20%;margin-left:3rem}.top-titles-first{width:25rem}.industrial-content{width:50rem;padding:0 2rem}.advances-content-img{width:35rem}.safe-content{width:50rem;padding:0 2rem}.problems-content-item{width:25%}.suggestion-form{width:70%}}@media only screen and (min-width:860px) and (max-width:1023px){.centralizer{width:98%;margin:0 auto}.problems-content-item{width:25%}.suggestion-form{width:70%}}@media only screen and (max-width:640px){.centralizer{width:98%;margin:0 auto}.top-titles{font-size:1.2rem;top:30%;margin-left:1rem}.top-titles-first{width:20rem;font-size:2.5rem}.top-titles-second{font-size:2.5rem;margin-left:1rem}.industrial-content{width:40rem;padding:0 2rem}.industrial-content-text{font-size:1.5rem;width:90%}.industrial-content-title{font-size:1.5rem}.advances-content{padding-top:10rem;-ms-flex-direction:column;flex-direction:column;background-image:none}.advances-content-img{width:25rem}.advances-content-text{width:90%}.advances-content-text p{font-size:1.5rem;line-height:2rem}.advances-content-text h2{font-size:1.5rem}.safe-content{width:40rem;padding:0 2rem}.safe-content-items{-ms-flex-direction:column;flex-direction:column}.safe-content-title{font-size:1.5rem}.safe-content-items-text{width:100%;margin-bottom:6rem;font-size:1rem}.safe-content-items-img{width:100%;-ms-flex-pack:center;justify-content:center;margin-bottom:5rem}.problems-content{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}.problems-content-item{width:80%}.problems-title{margin:0 auto;margin-bottom:3rem;width:30rem}.problems-title h2{margin:0;font-size:1.5rem}.suggestion-form{width:90%}.suggestion-title{font-size:1.5rem;width:30rem}.suggestion-text{font-size:1.5rem}.button{font-size:1.3rem}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
